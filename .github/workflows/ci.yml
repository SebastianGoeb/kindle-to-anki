name: CI
on:
  pull_request:
  push:
    branches: [main]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # setup
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup

      - name: Install more cargo tools
        run: echo yes | cargo binstall cargo-llvm-cov cargo-nextest

      # test
      - name: Run tests and generate coverage
        run: cargo llvm-cov --all-features --workspace --lcov --output-path lcov.info nextest --profile ci

      - uses: mikepenz/action-junit-report@v3
        if: always()
        with:
          check_name: test
          report_paths: "**/junit.xml"

      # lint
      - uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features -- -D warnings
          name: lint
        if: always()

      # coverage
      - name: Upload coverage to Coveralls
        uses: coverallsapp/github-action@v2.0.0
        if: always()

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        if: always()
        with:
          fail_ci_if_error: true
  multiarch-dry-run:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-gnu
          - x86_64-apple-darwin

        include:
          - target: x86_64-unknown-linux-gnu
            host_os: ubuntu-latest
            binary_suffix: linux

          - target: x86_64-apple-darwin
            host_os: macos-latest
            binary_suffix: macos

    runs-on: ${{ matrix.host_os }}
    steps:
      # setup
      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Setup Rust
        uses: ./.github/actions/setup

      - name: Install target
        shell: bash
        run: rustup target add ${{ matrix.target }}

      # build
      - name: Build
        shell: bash
        run: cargo build --target ${{ matrix.target }}

      - name: Rename binary
        shell: bash
        run: mv target/${{ matrix.target }}/debug/kindle-to-anki "target/debug/kindle-to-anki-${{ matrix.binary_suffix }}"

      - uses: actions/upload-artifact@v3
        with:
          name: debug-binary-${{ matrix.binary_suffix }}
          path: target/debug/kindle-to-anki-${{ matrix.binary_suffix }}

  multiarch-debug:
    runs-on: ubuntu-latest
    needs: multiarch-dry-run
    steps:
      - uses: actions/download-artifact@v3

      - name: debug
        shell: bash
        run: |
          ls -hla target/debug
          ls -hla etc/usr/artifacts/
          ls -hla etc/usr/artifacts/*
